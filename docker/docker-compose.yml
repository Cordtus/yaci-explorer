version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: yaci-explorer-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-foobar}
      POSTGRES_DB: ${POSTGRES_DB:-yaci}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - yaci-network

  # PostgREST API
  postgrest:
    image: postgrest/postgrest:v12.0.2
    container_name: yaci-explorer-postgrest
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-foobar}@postgres:5432/${POSTGRES_DB:-yaci}
      PGRST_DB_SCHEMA: ${PGRST_DB_SCHEMA:-api}
      PGRST_DB_ANON_ROLE: ${POSTGRES_USER:-postgres}
      PGRST_SERVER_PORT: 3000
      PGRST_OPENAPI_SERVER_PROXY_URI: ${POSTGREST_PROXY_URI:-http://localhost:3000}
    ports:
      - "${POSTGREST_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - yaci-network

  # Yaci indexer (from Docker image)
  yaci:
    image: ${YACI_IMAGE:-ghcr.io/manifest-network/yaci:latest}
    container_name: yaci-explorer-indexer
    command: >
      extract postgres ${CHAIN_GRPC_ENDPOINT}
      -p postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-foobar}@postgres:5432/${POSTGRES_DB:-yaci}
      --live
      --max-concurrency ${YACI_MAX_CONCURRENCY:-100}
      ${YACI_INSECURE:+-k}
      --enable-prometheus
      --prometheus-addr 0.0.0.0:2112
      -l ${YACI_LOG_LEVEL:-info}
    environment:
      YACI_LOGLEVEL: ${YACI_LOG_LEVEL:-info}
    ports:
      - "${YACI_METRICS_PORT:-2112}:2112"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - yaci-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Block explorer UI
  explorer:
    build:
      context: ..
      dockerfile: docker/explorer/Dockerfile
    container_name: yaci-explorer-ui
    environment:
      POSTGREST_URL: ${POSTGREST_URL:-http://postgrest:3000}
      CHAIN_ID: ${CHAIN_ID:-manifest-1}
      CHAIN_NAME: ${CHAIN_NAME:-Manifest Network}
    ports:
      - "${EXPLORER_PORT:-3001}:80"
    depends_on:
      - postgrest
    restart: unless-stopped
    networks:
      - yaci-network

networks:
  yaci-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
