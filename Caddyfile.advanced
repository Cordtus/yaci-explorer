# Advanced Caddy configuration with rate limiting and caching
# Place this in /etc/caddy/Caddyfile on your Caddy server (10.70.48.100)

# Global options
{
    # Email for Let's Encrypt
    email your-email@example.com

    # ACME CA (use staging for testing)
    # acme_ca https://acme-staging-v02.api.letsencrypt.org/directory
}

mantra.basementnodes.ca {
    # Rate limiting (requires Caddy plugin: github.com/mholt/caddy-ratelimit)
    # Uncomment if you have the rate limit plugin installed
    # rate_limit {
    #     zone explorer {
    #         key {remote_host}
    #         events 100
    #         window 1m
    #     }
    # }

    # API endpoints - stricter rate limiting
    @api {
        path /api/*
    }

    # Static assets - cache headers
    @static {
        path *.js *.css *.png *.jpg *.jpeg *.gif *.svg *.woff *.woff2 *.ttf *.ico
    }

    # Add cache headers for static assets
    header @static Cache-Control "public, max-age=31536000, immutable"

    # Reverse proxy to backend
    reverse_proxy 10.70.48.134:3001 {
        # Load balancing (if you add more backend servers)
        # to 10.70.48.135:3001
        # lb_policy round_robin

        # Health check
        health_uri /
        health_interval 30s
        health_timeout 5s
        health_status 200

        # Proxy headers
        header_up Host {host}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Port {server_port}

        # Timeouts
        transport http {
            dial_timeout 5s
            response_header_timeout 10s
            read_timeout 30s
            write_timeout 30s
        }

        # Circuit breaker
        fail_duration 30s
        max_fails 3
        unhealthy_status 500 502 503 504
    }

    # Security headers
    header {
        # Strict Transport Security (HSTS)
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

        # Prevent clickjacking
        X-Frame-Options "SAMEORIGIN"

        # XSS protection
        X-Content-Type-Options "nosniff"
        X-XSS-Protection "1; mode=block"

        # Content Security Policy
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'self';"

        # Referrer policy
        Referrer-Policy "strict-origin-when-cross-origin"

        # Permissions policy
        Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()"

        # Remove server info
        -Server
        -X-Powered-By
    }

    # Logging with custom format
    log {
        output file /var/log/caddy/explorer-access.log {
            roll_size 100mb
            roll_keep 10
            roll_keep_for 2160h  # 90 days
        }
        format json {
            time_format "iso8601"
            message_key "msg"
        }
        level INFO
    }

    # Enable compression
    encode {
        gzip 6
        zstd
        minimum_length 256
    }

    # Custom error pages
    handle_errors {
        @502 expression {err.status_code} == 502
        @503 expression {err.status_code} == 503
        @504 expression {err.status_code} == 504

        handle @502 {
            respond "Backend temporarily unavailable. Please try again in a moment." 502
        }
        handle @503 {
            respond "Service unavailable. Maintenance in progress." 503
        }
        handle @504 {
            respond "Gateway timeout. Backend took too long to respond." 504
        }

        respond "{err.status_code} {err.status_text}"
    }
}

# Redirect www to non-www
www.mantra.basementnodes.ca {
    redir https://mantra.basementnodes.ca{uri} permanent
}

# Metrics endpoint (optional - for monitoring)
# :2019 {
#     metrics /metrics
# }
