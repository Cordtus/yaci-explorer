# PostgreSQL Configuration
POSTGRES_USER=postgres
POSTGRES_PASSWORD=foobar
POSTGRES_DB=yaci
POSTGRES_PORT=5432

# PostgREST Configuration
PGRST_DB_SCHEMA=api
POSTGREST_PORT=3000

# Explorer Frontend API URL
# For development: http://localhost:3000
# For production with separate containers: https://your-api-domain.com or http://backend-ip:3000
# IMPORTANT: Must be HTTPS if your frontend is served over HTTPS to avoid mixed content errors
VITE_POSTGREST_URL=http://localhost:3000

# Legacy env vars for docker-compose compatibility
POSTGREST_URL=http://localhost:3000
POSTGREST_PROXY_URI=http://localhost:3000

# Yaci Indexer Configuration
# Use 'latest' for latest version, or specify version like 'v1.0.0'
# Using Cordtus fork with Mantrachain compatibility and error handling
YACI_IMAGE=ghcr.io/cordtus/yaci:main

# Chain to index - required!
# For single-container setup: use host.docker.internal:9090
# For multi-container setup: use <mantrad-container-ip>:9090
CHAIN_GRPC_ENDPOINT=host.docker.internal:9090

# Indexer settings
YACI_MAX_CONCURRENCY=100
YACI_LOG_LEVEL=info
YACI_INSECURE=-k
YACI_METRICS_PORT=2112

# Chain metadata
CHAIN_ID=manifest-1
CHAIN_NAME=Manifest Network

# Explorer UI
EXPLORER_PORT=3001

# Development settings
NODE_ENV=production

# Optional: For local yaci development
# Uncomment and build yaci locally with: docker build -t yaci:local -f docker/Dockerfile .
# YACI_IMAGE=yaci:local
